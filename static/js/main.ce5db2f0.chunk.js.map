{"version":3,"sources":["components/components.js","App.js","serviceWorker.js","index.js"],"names":["Root","className","this","props","RootName","React","Component","HotTopic","handleInfiniteOnLoad","data","state","setState","loading","length","message","warning","hasMore","getHotTopic3","lastCursor","getHotTopic","console","log","axios","url","method","headers","params","pageSize","res","order","concat","initialLoad","pageStart","loadMore","useWindow","dataSource","renderItem","item","newsArray","newsItems","map","news","href","title","siteName","summary","TechnologyNews","getTechnologyNews3","timeStamp","Date","parse","getTechnologyNews","oldCursor","DeveloperInformation","getDeveloperInformation3","getDeveloperInformation","NavigationBar","to","InformationTable","exact","path","App","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce5db2f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './components.css';\r\nimport axios from 'axios';\r\n\r\n//ant-design\r\nimport { List, message, Spin } from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\n\r\nexport class Root extends React.Component {\r\n    render() {\r\n        return (\r\n          <div className=\"navigation\">\r\n            <span>{this.props.RootName}</span>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class HotTopic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      lastCursor: '',\r\n      loading: false,\r\n      hasMore: true\r\n    };\r\n\r\n    this.getHotTopic();\r\n  }\r\n\r\n  async getHotTopic() {\r\n    console.log('function getHotTopic start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/topic',\r\n      method:\"get\",\r\n      headers:{\r\n        'Content-type':'application/json;charset=UTF-8'\r\n      },\r\n      params: {\r\n        pageSize: 5,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    const lastCursor = res.data.data[4].order;\r\n\r\n    console.log(res.data.data)\r\n    this.setState({\r\n      data: res.data.data,\r\n      lastCursor\r\n    })\r\n\r\n  }\r\n\r\n  async getHotTopic3() {\r\n    console.log('function3 start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/topic',\r\n      method:\"get\",\r\n      params: {\r\n        pageSize: 5,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    const lastCursor = res.data.data[4].order;\r\n\r\n    console.log(res.data.data)\r\n    let { data } = this.state;\r\n    data = data.concat(res.data.data)\r\n    this.setState({\r\n      data,\r\n      lastCursor,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 60) {\r\n      message.warning('求宁别再翻啦 Q^Q');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.getHotTopic3();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"infomation-container\" >\r\n        <div className=\"demo-infinite-container\">\r\n            <InfiniteScroll\r\n              initialLoad={false}\r\n              pageStart={0}\r\n              loadMore={this.handleInfiniteOnLoad}\r\n              hasMore={!this.state.loading && this.state.hasMore}\r\n              useWindow={false}\r\n            >\r\n              <List\r\n                dataSource={this.state.data}\r\n                renderItem={\r\n                  item =>{\r\n                    console.log(item);\r\n                    console.log(item.newsArray);\r\n                    const newsItems = item.newsArray.map((news) =>\r\n                      <li>\r\n                        <a href = {news.url} >\r\n                          {news.title} <br/>\r\n                          <span className=\"siteName\">\r\n                            {news.siteName}\r\n                          </span>\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                    return (\r\n                      <div className=\"infomation\" >\r\n                        <h3>{item.title}</h3>\r\n                        <p>{item.summary}</p>\r\n                        <ul>{newsItems}</ul>\r\n                        <hr />\r\n                      </div>\r\n                    )\r\n                  }\r\n                }\r\n              >\r\n                {this.state.loading && this.state.hasMore && (\r\n                  <div className=\"demo-loading-container\">\r\n                    <Spin />\r\n                  </div>\r\n                )}\r\n              </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport class TechnologyNews extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var timeStamp = Date.parse(new Date());\r\n    console.log(timeStamp);\r\n    this.state = {\r\n      data: [],\r\n      lastCursor: timeStamp,\r\n      loading: false,\r\n      hasMore: true\r\n    };\r\n\r\n    this.getTechnologyNews();\r\n  }\r\n\r\n  async getTechnologyNews() {\r\n    console.log('function getHotTopic start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/news',\r\n      method:\"get\",\r\n      params: {\r\n        pageSize: 10,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    console.log(res)\r\n    const oldCursor = this.state.lastCursor;\r\n    const lastCursor =oldCursor - 3600000; \r\n\r\n/*     console.log(res.data.data) */\r\n    this.setState({\r\n      data: res.data.data,\r\n      lastCursor\r\n    })\r\n\r\n  }\r\n\r\n  async getTechnologyNews3() {\r\n    console.log('function3 start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/news',\r\n      method:\"get\",\r\n      params: {\r\n        pageSize: 10,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    const oldCursor = this.state.lastCursor;\r\n    const lastCursor = oldCursor - 3600000; \r\n\r\n    console.log(res.data.data)\r\n    let { data } = this.state;\r\n    data = data.concat(res.data.data)\r\n    this.setState({\r\n      data,\r\n      lastCursor,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 60) {\r\n      message.warning('求宁别再翻啦 Q^Q');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.getTechnologyNews3();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"infomation-container\" >\r\n        <div className=\"demo-infinite-container\">\r\n            <InfiniteScroll\r\n              initialLoad={false}\r\n              pageStart={0}\r\n              loadMore={this.handleInfiniteOnLoad}\r\n              hasMore={!this.state.loading && this.state.hasMore}\r\n              useWindow={false}\r\n            >\r\n              <List\r\n                dataSource={this.state.data}\r\n                renderItem={\r\n                  item =>{\r\n                    return (\r\n                      <div className=\"infomation\" >\r\n                        <a href={item.url}> {/* 这里只渲染了PC端的链接,但API返回的数据中也给了移动端的url,,待改进 */}\r\n                          <h3>{item.title}</h3>\r\n                          <p>{item.summary}\r\n                          <span className=\"technewsSiteName\" >{item.siteName}</span>\r\n                          </p>\r\n                        </a>\r\n                        <hr />\r\n                      </div>\r\n                    )\r\n                  }\r\n                }\r\n              >\r\n                {this.state.loading && this.state.hasMore && (\r\n                  <div className=\"demo-loading-container\">\r\n                    <Spin />\r\n                  </div>\r\n                )}\r\n              </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport class DeveloperInformation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var timeStamp = Date.parse(new Date());\r\n    console.log(timeStamp);\r\n    this.state = {\r\n      data: [],\r\n      lastCursor: timeStamp,\r\n      loading: false,\r\n      hasMore: true\r\n    };\r\n\r\n    this.getDeveloperInformation();\r\n  }\r\n\r\n  async getDeveloperInformation() {\r\n    console.log('function getDeveloperInformation start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/technews',\r\n      method:\"get\",\r\n      params: {\r\n        pageSize: 10,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    console.log(res)\r\n    const oldCursor = this.state.lastCursor;\r\n    const lastCursor =oldCursor - 3600000; \r\n\r\n/*     console.log(res.data.data) */\r\n    this.setState({\r\n      data: res.data.data,\r\n      lastCursor\r\n    })\r\n\r\n  }\r\n\r\n  async getDeveloperInformation3() {\r\n    console.log('function3 start');\r\n    console.log(this.state.lastCursor);\r\n    const res = await axios({\r\n      url:'/technews',\r\n      method:\"get\",\r\n      params: {\r\n        pageSize: 10,\r\n        lastCursor: this.state.lastCursor\r\n      }\r\n    });\r\n    const oldCursor = this.state.lastCursor;\r\n    const lastCursor = oldCursor - 3600000; \r\n\r\n    console.log(res.data.data)\r\n    let { data } = this.state;\r\n    data = data.concat(res.data.data)\r\n    this.setState({\r\n      data,\r\n      lastCursor,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 60) {\r\n      message.warning('求宁别再翻啦 Q^Q');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.getDeveloperInformation3();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"infomation-container\" >\r\n        <div className=\"demo-infinite-container\">\r\n            <InfiniteScroll\r\n              initialLoad={false}\r\n              pageStart={0}\r\n              loadMore={this.handleInfiniteOnLoad}\r\n              hasMore={!this.state.loading && this.state.hasMore}\r\n              useWindow={false}\r\n            >\r\n              <List\r\n                dataSource={this.state.data}\r\n                renderItem={\r\n                  item =>{\r\n                    return (\r\n                      <div className=\"infomation\" >\r\n                        <a href={item.url}> {/* 这里只渲染了PC端的链接,但API返回的数据中也给了移动端的url,,待改进 */}\r\n                          <h3>{item.title}</h3>\r\n                          <p>{item.summary}\r\n                          <span className=\"technewsSiteName\" >{item.siteName}</span>\r\n                          </p>\r\n                        </a>\r\n                        <hr />\r\n                      </div>\r\n                    )\r\n                  }\r\n                }\r\n              >\r\n                {this.state.loading && this.state.hasMore && (\r\n                  <div className=\"demo-loading-container\">\r\n                    <Spin />\r\n                  </div>\r\n                )}\r\n              </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { Root, HotTopic, TechnologyNews, DeveloperInformation } from './components/components'\nimport './App.css';\n\n//react-router\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";  //需要下载( npm install react-router-dom -s )\n\nclass NavigationBar extends React.Component {\n  render() {\n    return (\n      <div className=\"navigationBarContainer\" >\n        <div className=\"navianavigationContainer\">\n          <Router>\n            <span >\n              <Link to=\"/\" >\n                <Root RootName='热门话题' />\n              </Link>\n              <Link to=\"/technologyNews\" >\n                <Root RootName='科技动态' />\n              </Link>\n              <Link to='/developerInformation' >\n                <Root RootName='开发者资讯' />\n              </Link>\n              \n            </span>\n            <span>\n              <Root RootName='登录' />\n            </span>\n          </Router>\n        </div>\n        <hr />\n      </div>\n    )\n  }\n}\n\n\n\n\n\nclass InformationTable extends React.Component {\n  render() {\n    return (\n      <div className = \"infomationTable\" >\n        <div className = \"box\" />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <HotTopic />\n            </Route>\n            <Route path=\"/technologyNews\">\n              <TechnologyNews />\n            </Route>\n            <Route path=\"/developerInformation\">\n              <DeveloperInformation />\n            </Route>\n          </Switch>\n        </Router>\n        <hr />\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <NavigationBar />\n      <InformationTable />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios';\n\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\n\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\naxios.defaults.baseURL = 'https://api.readhub.cn'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}